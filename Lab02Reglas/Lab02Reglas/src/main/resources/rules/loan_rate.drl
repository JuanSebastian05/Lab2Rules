import com.udea.Lab02Reglas.model.Participant;
global com.udea.Lab02Reglas.model.Rate;

dialect "mvel"
rule "Checking Existing Debt Against Lean amount"
when
Participant(loanAmount > (2 * existingDebt))
then
rate.setLoanStatus("Rejected - Too Much Debt");
rate.setLoanRate(999);
end
rule "Checking Annual Salary is grater than 50000"
when
Participant(annualSalary <= 50000)
then
rate.setLoanStatus("Rejected - Too low salary");
rate.setLoanRate(999);
end
rule "Checking Credit Score less than 550"
when
Participant(creditScore< 550 , annualSalary > 50000 , loanAmount <
(2 * existingDebt))
then
rate.setLoanStatus("Rejected");
rate.setLoanRate(999);
end
rule "Checking Credit Score less than 650"
when
Participant(creditScore< 650 && creditScore >=550 , annualSalary >
50000 , loanAmount < (2 * existingDebt))
then
rate.setLoanStatus("Approved");
rate.setLoanRate(7.25);
end
rule "Checking Credit Score less than 750"
when

Participant(creditScore< 750 && creditScore >=650 , annualSalary
> 50000 , loanAmount < (2 * existingDebt))
then
rate.setLoanStatus("Approved");
rate.setLoanRate(6.25);
end
rule "Checking Credit Score greater than 750"
when
Participant(creditScore >= 750 , annualSalary > 50000 ,
loanAmount < (2 * existingDebt))
then
rate.setLoanStatus("Approved");
rate.setLoanRate(5.25);
end